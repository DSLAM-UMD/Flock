Projection: #R.seller, #AVG(R.price) [seller:Int32, AVG(R.price):Float64;N]
  Aggregate: groupBy=[[#R.seller]], aggr=[[AVG(#R.price)]] [seller:Int32, AVG(R.price):Float64;N]
    Projection: #R.seller, #R.price, #R.time_rank, alias=R [seller:Int32, price:Int32, time_rank:UInt64;N]
      Projection: #Q.seller, #Q.price, #ROW_NUMBER() PARTITION BY [#Q.seller] ORDER BY [#Q.b_date_time DESC NULLS FIRST] AS time_rank, alias=R [seller:Int32, price:Int32, time_rank:UInt64;N]
        Filter: #ROW_NUMBER() PARTITION BY [#Q.seller] ORDER BY [#Q.b_date_time DESC NULLS FIRST] <= Int64(10) [ROW_NUMBER() PARTITION BY [#Q.seller] ORDER BY [#Q.b_date_time DESC NULLS FIRST]:UInt64;N, seller:Int32, price:Int32, b_date_time:Timestamp(Millisecond, None), price_rank:UInt64;N]
          WindowAggr: windowExpr=[[ROW_NUMBER() PARTITION BY [#Q.seller] ORDER BY [#Q.b_date_time DESC NULLS FIRST]]] [ROW_NUMBER() PARTITION BY [#Q.seller] ORDER BY [#Q.b_date_time DESC NULLS FIRST]:UInt64;N, seller:Int32, price:Int32, b_date_time:Timestamp(Millisecond, None), price_rank:UInt64;N]
            Projection: #Q.seller, #Q.price, #Q.b_date_time, #Q.price_rank, alias=Q [seller:Int32, price:Int32, b_date_time:Timestamp(Millisecond, None), price_rank:UInt64;N]
              Sort: #Q.a_id ASC NULLS LAST, #Q.price DESC NULLS FIRST [seller:Int32, a_id:Int32, price:Int32, b_date_time:Timestamp(Millisecond, None), price_rank:UInt64;N]
                Projection: #auction.seller, #auction.a_id, #bid.price, #bid.b_date_time, #ROW_NUMBER() PARTITION BY [#auction.a_id] ORDER BY [#bid.price DESC NULLS FIRST] AS price_rank, alias=Q [seller:Int32, a_id:Int32, price:Int32, b_date_time:Timestamp(Millisecond, None), price_rank:UInt64;N]
                  Filter: #ROW_NUMBER() PARTITION BY [#auction.a_id] ORDER BY [#bid.price DESC NULLS FIRST] = Int64(1) [ROW_NUMBER() PARTITION BY [#auction.a_id] ORDER BY [#bid.price DESC NULLS FIRST]:UInt64;N, a_id:Int32, a_date_time:Timestamp(Millisecond, None), expires:Timestamp(Millisecond, None), seller:Int32, auction:Int32, price:Int32, b_date_time:Timestamp(Millisecond, None)]
                    WindowAggr: windowExpr=[[ROW_NUMBER() PARTITION BY [#auction.a_id] ORDER BY [#bid.price DESC NULLS FIRST]]] [ROW_NUMBER() PARTITION BY [#auction.a_id] ORDER BY [#bid.price DESC NULLS FIRST]:UInt64;N, a_id:Int32, a_date_time:Timestamp(Millisecond, None), expires:Timestamp(Millisecond, None), seller:Int32, auction:Int32, price:Int32, b_date_time:Timestamp(Millisecond, None)]
                      Filter: #bid.b_date_time BETWEEN #auction.a_date_time AND #auction.expires [a_id:Int32, a_date_time:Timestamp(Millisecond, None), expires:Timestamp(Millisecond, None), seller:Int32, auction:Int32, price:Int32, b_date_time:Timestamp(Millisecond, None)]
                        Join: #auction.a_id = #bid.auction [a_id:Int32, a_date_time:Timestamp(Millisecond, None), expires:Timestamp(Millisecond, None), seller:Int32, auction:Int32, price:Int32, b_date_time:Timestamp(Millisecond, None)]
                          TableScan: auction projection=Some([0, 5, 6, 7]) [a_id:Int32, a_date_time:Timestamp(Millisecond, None), expires:Timestamp(Millisecond, None), seller:Int32]
                          TableScan: bid projection=Some([0, 2, 3]) [auction:Int32, price:Int32, b_date_time:Timestamp(Millisecond, None)]
